# This is legacy recipe, which has not been tested using conda-build.
# See: https://github.com/ContinuumIO/anaconda-recipes/blob/master/LEGACY.md

package:
  name: cffi
  version: 1.9.1

source:
  fn: cffi-1.9.1.tar.gz                                [unix]
  url: https://pypi.python.org/packages/a1/32/e3d6c3a8b5461b903651dd6ce958ed03c093d2e00128e3f33ea69f1d7965/cffi-1.9.1.tar.gz
  md5: b8fa7ccb87790531db3316ab17aa8244                [unix]
  fn: cffi-1.9.1-cp27-cp27m-win32.whl                  [py27 and win32]
  fn: cffi-1.9.1-cp27-cp27m-win_amd64.whl              [py27 and win64]
  fn: cffi-1.9.1-cp34-cp34m-win32.whl                  [py34 and win32]
  fn: cffi-1.9.1-cp34-cp34m-win_amd64.whl              [py34 and win64]
  fn: cffi-1.9.1-cp35-cp35m-win32.whl                  [py35 and win32]
  fn: cffi-1.9.1-cp35-cp35m-win_amd64.whl              [py35 and win64]
  fn: cffi-1.9.1-cp36-cp36m-win32.whl                  [py36 and win32]
  fn: cffi-1.9.1-cp36-cp36m-win_amd64.whl              [py36 and win64]
  patches:
    - setup-linux.patch    [linux]

requirements:
  build:
    - python
    - libffi               [linux]
    - setuptools           [unix]
    - pycparser            [unix]
  run:
    - libffi               [linux]
    - python
    - pycparser

test:
  imports:
    - cffi
    - _cffi_backend

about:
  home: http://cffi.readthedocs.org
  license: MIT
  license_file: LICENSE                                            [unix]
  summary: C Foreign Function Interface for Python
  description: |
    Cffi aims to allow users to call C code from Python without having to
    learn a 3rd language. It provides a convenient and reliable way to call
    compiled C code from Python using interface declarations written in C.
  doc_url: http://cffi.readthedocs.org
  dev_url: https://bitbucket.org/cffi/cffi/overview
