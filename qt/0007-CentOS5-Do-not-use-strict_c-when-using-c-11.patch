From 3dcf94f2aff2a2db8a75051a18ad5ded03f76b86 Mon Sep 17 00:00:00 2001
From: Ray Donnelly <mingw.android@gmail.com>
Date: Tue, 22 Nov 2016 11:12:59 +0000
Subject: [PATCH 7/9] CentOS5: Do not use strict_c++ when using c++11

If __STRICT_ANSI__ is defined then CentOS 5.11 i686 does not define
__u64, __s64, __le64 or __be64, then qbenchmarkperfevents.cpp can't
be compiled.  If this causes any trouble then it may be possible to
pass the following on the configure command-line (for i686 *only*):
-D __u64="unsigned long long"
-D __s64="__signed__ long long"
-D __le64="unsigned long long"
-D __be64="__signed__ long long"

Change-Id: Id55122913fb5a8a8a846ba43ae5e8790db42f2b4
---
 mkspecs/features/qt_common.prf | 11 ++++++++++-
 1 file changed, 10 insertions(+), 1 deletion(-)

diff --git qtbase/mkspecs/features/qt_common.prf qtbase/mkspecs/features/qt_common.prf
index c180946..eefe2db 100644
--- qtbase/mkspecs/features/qt_common.prf
+++ qtbase/mkspecs/features/qt_common.prf
@@ -12,7 +12,16 @@
 QMAKE_DIR_REPLACE_SANE += DESTDIR
 CONFIG -= debug_and_release_target
 
-contains(QT_CONFIG, c++11): CONFIG += c++11 strict_c++
+# contains(QT_CONFIG, c++11): CONFIG += c++11 strict_c++
+# If __STRICT_ANSI__ is defined then CentOS 5.11 i686 does not define
+# __u64, __s64, __le64 or __be64, then qbenchmarkperfevents.cpp can't
+# be compiled.  If this causes any trouble then it may be possible to
+# pass the following on the configure command-line (for i686 *only*):
+# -D __u64="unsigned long long" \
+# -D __s64="__signed__ long long" \
+# -D __le64="unsigned long long" \
+# -D __be64="__signed__ long long"
+contains(QT_CONFIG, c++11): CONFIG += c++11
 contains(QT_CONFIG, c++14): CONFIG += c++14
 contains(QT_CONFIG, c++1z): CONFIG += c++1z
 contains(TEMPLATE, .*lib) {
-- 
2.10.2

